1)
🔍 Project: "Word Analyzer CLI Tool"
📋 Description:
A command-line tool that analyzes a given paragraph of text. It gives word frequency, unique words, longest/shortest words, and supports additional options through kwargs.

🧠 Concepts Covered:
Concept	Where Used
function	Multiple functions used
*args	Allowing multiple texts for analysis
**kwargs	Optional flags like reverse, min_len
lambda	For sorting and filtering
list	For storing and processing words
tuple	To return multiple values
set	To get unique words
dict	For word frequency count


🚀 Extension Ideas for Students:
Export result to a .txt file
Add a feature to ignore common stopwords (is, the, etc.)
Analyze from a .txt file input

output:
--- Analysis Result ---
Total Words: 12
Unique Words: 10
Longest Word: complex
Shortest Word: than

Word Frequency:
python: 2
simple: 2
code: 2
is: 2
great: 1
better: 1
than: 1
complex: 1

----------------------------------------------------------------------------
project 2

🎮 Project: “Word Scramble Game”
📋 Description:
A simple command-line game where the player guesses the original word from a scrambled version.

def main():
    words = ("python", "function", "variable", "lambda", "string", "tuple", "dictionary")
    hints = {
        "python": "Popular programming language 🐍",
        "function": "Reusable block of code",
        "variable": "Used to store values",
        "lambda": "Anonymous function",
        "string": "Text data type",
        "tuple": "Immutable sequence",
        "dictionary": "Key-value pair structure"
    }

    score, total = play_game(*words, word_dict=hints, rounds=5, hint=True)
    print(f"\n🎉 Game Over! You scored {score}/{total}.")


output:
🎮 Welcome to Word Scramble Game!
Unscramble the word. Type 'exit' to quit.

Scrambled word: ohytpn
Hint: Popular programming language 🐍
Your guess: python
✅ Correct!

Scrambled word: nfucoitn
Hint: Reusable block of code
Your guess: function
✅ Correct!

🎉 Game Over! You scored 2/2.
---------------------------------------------------------------------
project 3
🎲 Project: “Math Quiz Battle”
📋 Description:
This is a console-based 2-player math quiz battle game. Each player is asked random math questions. The player with the highest score at the end wins!

✅ Concepts Covered
Concept	Where Used
function	Core game logic, scoring, question generation
*args	Pass player names dynamically
**kwargs	Enable features like difficulty
lambda	Used for sorting leaderboard
list	Store questions and results
tuple	Used to return (question, answer)
set	Track asked questions (no repeats)
dict	Store player scores

output:

🎲 Welcome to Math Quiz Battle!
Players: Alice, Bob
Difficulty: Medium | Rounds: 5

🔢 Round 1
Alice, solve: 15 + 30
Your answer: 45
✅ Correct!

Bob, solve: 20 - 10
Your answer: 11
❌ Wrong! Correct was 10

🏁 Final Scores:
Alice: 4 point(s)
Bob: 2 point(s)

🎉 Winner is Alice!


