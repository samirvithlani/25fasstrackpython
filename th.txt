
programming lanaguage:

scripting lanaguage   :js,python
programming lanaguage :c,cpp,java,...

we have 2 types of programming | scripting language

1)server side programming language: c,cpp,java,python
2)client side programming language: end user, browser, javascri

we have 2 typed of programming | scripting language

datatype:
1)staticlly typed: c,cpp,java
    we have to define datatype while declaring a variable
2)dynamiclly typed: python,js:
    we have to define datatype while declaring a variable
    compiler:

files:
.py

history:
1)python was developed by guido van rossum in 1991
2)python is interpreted language

use:
1)python is used for web development: facebook, google, youtube
2)python is used for data science: data analysis, data visualization
3)python is used for machine learning: tensorflow, keras
4)python is used for artificial intelligence: neural networks, deep learning
5)games development: pygame

input:
type casting:
implicit type casting:
    when compiler do the job:
    int x =100.20
    output:100
expilicit type casting
    :when programmer will do the job:

narrow typecasting     broad typecasting
 
int --data ->float     float -->data -->int
not possbile            float x = 100


operators:
defination:operators are special symbols which can use perofm 
operation on oerand

unery operators : it required single operand: ++a , --a 
bin operators   : it required min 2 operand :
ternery operators :it required min 3 operand


1)arithmetic operators : + , - , 8,/ , // , **
2)logical operators : and or not
3)biwise operators: <<,>>,
4)relational operators : <,>,<=,>=,==
5)asignment operators : = , +=,-=,......
6)membership operator : in not in
7)identity operator : is is not
? :



decision making statement:
if else:
match case
loops


c language

if(condiiton part){

    if block..
}
else{
    block par
}



GRADE SYSTEM:
mark -->5 subject:
enter maths mark,...,...,..

per find:
pers> 80 : A grade
pers> 70 : B 
>60 : c
<60 : D
<35 fail

create 1 game simulars:

welecom cric l...

please slecte mode
single mult:

loops:
entry control loop:
for   :when you know no of itration
while :

for(int i=1;i<=10;i++){

    
}
range() membership operator in


exit control :
do while


enter number print table of that numner

10
10 * 1 = 10
10 * 2 = 20
..
..10 * 10 =


get no from user find factorial of that numbner

5
1 * 2 *3 *4* 5 ==> 120


fibonacci series:
no1 = 0
no2 = 1

no1+no2 = 1
0  1   1   2   3   5   8   13

#153
armstrong no

1^3 + 5^3 + 3^3 = 153
1+125+27 = 153

1634
1^4 + 6^4 + 3^4+4^4 = 1634

LCM of 2 numbers
10 15 - 30

10 : 10 20 30 40 50 60 70 80 90 100
15 : 15 30

4 : 4 8 12 16 
6 : 6 12

12

find HCF of 2 nos:
4 6 : 2


str:
'name' 'x' 'y' -->string

string
1)string is immutable: eg name = "abc"
2)string stores data in index manner "a[0]b[1]c[2]"
3)string is iterbale
4)string is subscriptable = name = "ram" name[0]

ascii value:unicode
A - 65 a - 97


upper and lower function*
user lower name -->please enter name 

cover that name to upper case:
hint:use ord chr and single single char concatination 
name
copyname 

copyName = copyName + name[i]

name = "ram"

revName = "mar"

palindrome ===
"madam" yes

name = "india is my country"
#hint membership use in


input enter string
enter chr to search

java
a
index =1
ans = 1
x --> -1

"hi this is india"
"hithisisindia"

find longest word from string:
hi this is malayalam in india

malayalam

string slicing

array: array is group of similar kind of elm:
array size fixed

ds:
list
tuple
set
dict

#char of list...
1)list is dynamic : ["ram","shyam"] --> add ["ok"] -->3 [1,22,33,44] -->22 remove --> shrink
2)list is hetrogenious [11,11,22,"mm",True]
3)list allows duplicate element
4)list is orderd : [100,20,43] --> 10,20,43
5)list is iterbale
6)list is subscriptable  [10,20,30] a[0]
7)list is mutable   
8)list stores data in index manner

data type of list is list
using [] we can create list.

tuple:
1)tuple is dynamic :
2)tuple is hetrogenious [11,11,22,"mm",True]
3)tuple allows duplicate element
4)tuple is orderd : [100,20,43] --> 10,20,43
5)list is iterbale
6)list is subscriptable  [10,20,30] a[0]
7)list is immutable   
8)list stores data in index manner

dict:
dict is dynamic
dict stores data in key value pair {"name":"amit"}
dict can have only unique key
dict can have only duplicate values
dict can have hetrogenious key and value both..
dict mutable
dict is iterbale
dict is subscriptable




set:
set is dynamic
set allows unique elements
set is unordered
set is not subscriptable



create set of 1to 10 element

====== Chat Room Menu ======
1. Join Chat
2. Leave Chat
3. Show Active Users
4. Exit
Enter your choice (1-4): 1
Enter username to join: alice
✅ User 'alice' joined the chat.

====== Chat Room Menu ======
1. Join Chat
2. Leave Chat
3. Show Active Users
4. Exit
Enter your choice (1-4): 1
Enter username to join: alice
⚠️ User 'alice' is already in the chat!

function:

type of functions:

1)built in functions
2)user defined functions

4 types of user defined functions:

1)without argument and without return value
2)with argument and without return value
3)without argument and with return value
4)with argument and with return value

void demo
int demo

to create function we use def keyword
def function_name():
    # function body


use of function:
1)code reusability
2)modularity : break code into small modules bank : deposit , withdraw, balance
3)debugging : easy to debug code,
4)readability : easy to read code

calulator : add sub mul div

enter 1 for add
    a +b - 20
    print(20)
enter 2 for sub
enter 3 for mul
enter 4 for div

5 for get all answrs

condition: if list empty : user has not entered any operation yet.

if user is doing add:10,20,33
if user is doing mul : 100,300




5 number press
add: 3 times ans are : 10,20,33
mul : 2 times ans are : 100,300 


create function which will retuen max valud from args [numbers] # 
create function which accept 2 parm first is threshold and second is args 
eg 10,10,100,9,70,65,0

retuen [100,70,65] using comprehension


args-->(100,True,20,20.89,100,"java",90.90)

ans = {
    'int':[100,20,100],
    float:[],
    str:[]
    boolean:[True]
}

task2: pass any kind of argument in args and do sum of only numbers and return it

task3: def operation(op,*args)
op ="sum" --> sum -->numbers
op = "mul" --> mul -->numbers

    
GENERATOR yield:
big file: line -->user
1 line ->

def test:
return [10,1]

file --> 1line
2nd line -- return
3rd line -- return


decorators in python:
decorators are functions that modify the behavior of another function or method. without changing its code.
A decorator is a function that takes another function as an argument, extends its behavior, and returns a new function.


function --> args --> int
Exception handling
file handling

POPS:
OOPS: class object wrap

1)encapsulation : 
                 1)class,object,constructor...
2)inheritance
3)polymorephisam
4)abstraction


class: class is blueprint of object:
object: object is an real world entiy of class


Fruit class apple,mango

scchool --> students
vehicle ->


constructor : constructor is special function which can create using __init__
            : use of constructor is to initilize class in memory
            : constructor called auto when we create an object of class
            const does not have any return type but it can have param
            default const param
            to initialize instance varibale of class



user username email passswprd ===>
const --->

display function : print

user username email passswprd ===> dict --> pass
const --->
display function : print

user username email passswprd ===> kwargs
const --->
display function : print

INheritance:
inheritance is the process by which one class (child class) can inherit the properties and methods of another class (parent class). T
his allows for code reuse and the creation of a hierarchical relationship between classes.

type of inheritance:
1)single inheritance : 1 parent 1 child
2)multiple inheritance : 1 child class and multiple parent class
3)multilevel inheritance : parent class and child class and grand child class
4)hierarchical inheritance : multiple child class and 1 parent class
5)hybrid inheritance : combination of multiple inheritance and multilevel inheritance


create 2 class and def relation pf parent child class
parent class must have param const and use that params in child class as display....




multilelv inheritance:

a --> b ---> c

a prop b use c use
b  prop -->c use




